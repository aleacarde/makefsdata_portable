name: CI

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    build_and_test:
        strategy:
            matrix:
                os: [ macos-latest, ubuntu-latest, windows-latest ]
        runs-on: ${{ matrix.os }}

        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          # Install dependencies
          - name: Install Dependencies (Linux)
            if: runner.os == 'Linux'
            run: |
              sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
              sudo apt-get update

              gccversion=$(apt-cache pkgnames | sed -nr 's/^gcc-(([0-9]+\.?)+)$/\1/p' | sort -n | tail -n1 )
              echo "The latest available gcc version: $gccversion"

              asanversion=$(apt-cache pkgnames | sed -nr 's/^libasan(([0-9]+\.?)+)$/\1/p' | sort -n | tail -n1 )
              echo "The latest available libasan version: $asanversion"

              sudo apt-get install -y build-essential cmake
              sudo apt-get install -y gcc-$gccversion 
              sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-$gccversion 60
              
              sudo apt-get install -y libasan$asanversion clang
    
        
          - name: Install Dependencies (macOS)
            if: runner.os == 'macOS'
            run: |
              brew update
              brew upgrade
              brew install cmake

          - name: Install Dependencies (Windows)
            if: ${{ runner.os == 'Windows' }}
            run: |
              choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
              choco install visualstudio2022buildtools -y
              choco install ninja -y

          - name: Configure CMake (macOS and Linux)
            if: ${{ runner.os == 'macOS' || runner.os == 'Linux' }}
            run: cmake -B build -S . -DENABLE_ASAN=ON

          - name: Configure CMake (Windows)
            if: ${{ runner.os == 'Windows' }}
            run: cmake -S . -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release
        
          - name: Build the project
            run: cmake --build build
        
          - name: Test the project with ctest
            run: ctest --test-dir build --output-on-failure
